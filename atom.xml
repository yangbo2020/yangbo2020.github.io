<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>不知为何</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-01-10T09:38:17.004Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Bo Yang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>学习能力</title>
    <link href="http://yoursite.com/2020/01/10/%E5%AD%A6%E4%B9%A0%E8%83%BD%E5%8A%9B/"/>
    <id>http://yoursite.com/2020/01/10/%E5%AD%A6%E4%B9%A0%E8%83%BD%E5%8A%9B/</id>
    <published>2020-01-10T09:21:23.758Z</published>
    <updated>2020-01-10T09:38:17.004Z</updated>
    
    <content type="html"><![CDATA[<p>1、 本质力：如果没有看透问题本质的能力，大部分事情只能是缘木求鱼<br>    这个感觉真的好难，怎么才能做到一目了然</p><pre><code>举个栗子。身边儿也有很多人想提升演讲能力，非常羡慕那些演讲大师的舞台表现力，自己也想要淡定自若、口若悬河。</code></pre><p>于是便开始不断模仿，模仿口气、手势、眼神、停顿，但效果总是自欺欺人。核心在于没有想明白演讲的本质是什么。<br>    其实，演讲最重要的是要去影响观众，让观众能够了解知识，产生思考，引起共情，最终产生行动。所以，提升演讲能<br>力最重要就是要回答好这个几问题：我真的想影响他们吗？我到底想如何影响到他们？我到底想让他们产生什么样思考<br>或者行动呢？而不是想尽办法展示个人魅力。<br>    再举个栗子。平时喜欢教朋友弹吉他，见过很多人还没有想明白学吉他的<br>本质，就开始报培训班。手里总拿着一本教材，从第一页开始，苦苦练习，好不认真。最后的结果只有两个，第一个是<br>放弃，第二个是学会了弹吉他，却变得不想弹吉他了。<br>    吉他对我们来说，其实是一种伴奏乐器，重要的是帮助自己弹奏<br>或者演唱出喜欢的歌，快乐起来。对弹吉他本身的兴趣、乐趣，这才是最重要的。所以，最高效的学习方式，是直接弹<br>奏自己喜欢的歌。当然可以通过简单的和弦或者节奏型开始，循序渐进，不断加大难度，越来越好听，而不是去费力啃<br>书籍。见过太多的人，学着学着就放弃了，实在可惜。所以，看清目的与本质，才能明白自己最应该关注并解决哪个问<br>题，才不至于在追求目标过程中迷失了自己。如何才能提升自己看清本质的能力呢？</p><pre><code>所以说，要明白我学习这个需要后期达到怎样的效果，虽然最终我的演讲能力，弹吉他能力比不了那些大师，但至少</code></pre><p>知道怎么这事怎么一回事，剩下的或许就是努力了。</p><p>2、 辨别力：我们总习惯性用大量时间来证明，这不是我想要的。</p><p>明确学习的目的与本质后，便去找到自己属于自己的路，打造适合自己的学习方法。<br>这个信息爆炸的社会，有成千上万的方法论，书籍、网络、牛人的建议更是层出不穷。<br>但每个人都与众不同，再好的方法、再成功的方法，也不一定适合你。<br>以前，在选择专业的时候，几乎没有经过任何信息收集，也没有深入的思考，毫无辨别能力。<br>草草便觉得得自己能做哪些事情，便选哪个专业。<br>模棱两可，混混僵僵过了n年时间，直到毕业后才发现，原来自己一直在用宝贵的时间，证明这个并不是我想要的。<br>最令人遗憾的，并不是发现这不是自己想要的，而是一直逃避与拖延，改变的太晚。<br>现在，很庆幸自己能够迈出转型的一步。<br>很多人说会问，不试试如何知道适合不适合自己呢？<br>我们每天只有24小时，排除吃饭、睡觉、走路、休息，能真正可以用的，9小时已是极限。<br>我们没有那么多时间去试错。<br>在经验不足、思考能力不足的时候，不是要我们完全不模仿。<br>而是要时刻保持怀疑的态度，不断问自己，这真的适合我吗？真的是我想要的吗？<br>如果发现不合适，果断舍弃，及早止损。<br>就像是，最好的休息方式并不是都在说的早睡早起，晚睡更有利于深度思考。<br>就像是，最好的运动方式也不是撸铁与跑步，走路散步也可以让人开心与健康。<br>那如何提升自己的辨别能力呢？最重要的就是养成不断向自己提问的习惯，用多<br>面镜，不断审视自己的选择，是否已经远离了目标。</p><pre><code>需要随时反省自己，是对的就前进，不是就想其他出路。</code></pre><p>3.专注力。我们不仅要专注的做事，而且要专注的只做一件事。</p><p>当比尔.盖茨被问到成功的秘诀，他只给出了一个词：Focus。<br>乔布斯更直接的回答：专注和简单一直是我成功的秘诀。<br>   我们大多数人，想要的太多，<br>反而什么都做不好。前些日子，自己想做限制性信念领域的咨询与培训，帮助大家梳<br>理学习与工作中的问题，看清本质，实现个人迭代与成长。于是就开始头脑风暴，想<br>办法参加各种线上与线下培训班，看各种书籍，想一股脑把写作、社群、赚钱、讲课<br>全都学习过来，发现自己的时间总是不够用。现在回想起来，心有余悸。最大的问题，<br>心太大，太杂，想要的太多，最后什么都得不到。大多数的学习，蜻蜓点水，根本体<br>会不到深入的乐趣与成就，于是便潦草地以为这不是我想要的。而往往在一件事情上<br>的深入与成就，可以带来另外一件事情的深入与成就。并不是，全部抓在手上，齐头<br>并进的关系。学习任何东西，都会遇到困难，我们常常会通过某种转换，来逃避真正<br>的问题，美其名曰休息或者换换脑子。但解决这个问题，才是能力提升的关键。所以，<br>时刻提醒自己，要专注啊，要直面问题啊。于是，便把所有的浮躁放下，只专心打造<br>最核心的竞争力，也就是限制性信念内容体系。开始专攻体系的研究与书籍编写。专注、<br>简单、快乐、有效，动力十足。就像是很多人，每年伊始，恨不得定100个年度目标，<br>恨不得全都实现。但最后总是草草收场，每年都如此，循环往复，剧情不停上演。大多<br>数人，只是喜欢，定目标时候自己的感觉罢了。所以，不妨时常提醒自己，我的目标<br>是否过多了呢？我想要的是不是过多了呢？我真的只专注于一件事情了吗？我真的只<br>专注于一个人了吗？我总是在逃避最关键的问题吗？</p><pre><code>所谓专注，就是在以上的前提下一根独木桥就下去，不犹豫。</code></pre><p>转载链接：<a href="https://www.zhihu.com/question/35103080/answer/966107811" target="_blank" rel="noopener">https://www.zhihu.com/question/35103080/answer/966107811</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1、 本质力：如果没有看透问题本质的能力，大部分事情只能是缘木求鱼&lt;br&gt;    这个感觉真的好难，怎么才能做到一目了然&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;举个栗子。身边儿也有很多人想提升演讲能力，非常羡慕那些演讲大师的舞台表现力，自己也想要淡定自若、口若悬河。&lt;/code&gt;&lt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>泛型粗说</title>
    <link href="http://yoursite.com/2020/01/10/%E6%B3%9B%E5%9E%8B%E7%B2%97%E8%AF%B4/"/>
    <id>http://yoursite.com/2020/01/10/%E6%B3%9B%E5%9E%8B%E7%B2%97%E8%AF%B4/</id>
    <published>2020-01-10T03:50:33.873Z</published>
    <updated>2020-01-10T03:53:54.056Z</updated>
    
    <content type="html"><![CDATA[<p>第八章 泛型</p><p>1.为什么使用泛型程序设计<br>     泛型程序设计 意味着编写的代码可以被很多不同类型的对象所重用（比如是重载的感觉）。比如说我们并不希望聚集String和File对象分别设计不同的类。实际上可以通过ArrayList<T> 来聚集任何类型的对象。<br>2.类型参数的好处<br>     ArrayList files=new ArrayList();<br>     String filename=(String) files,get(0);<br>  上面的例子存在两个问题：<br>     （1）当我想要获取一个值时必须进行强制类型转换<br>     （2）这里没有错误检查，因为可以向数组中添加任何类型的对象<br>  在编译不会出错，但是运行时就会报错。</p><p>  泛型则提供了一个好的解决方案：类型参数 （一种规范，强制要求ArrayList 里面所有的参数都是一种类型，便于一目了然）。<br>  ArrayList<String> files=new ArrayList();<br>  编译器会自己推理，知道返回的值类型是String，<br> 类型参数的魅力：使得程序具有更好的可读性和安全性</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;第八章 泛型&lt;/p&gt;
&lt;p&gt;1.为什么使用泛型程序设计&lt;br&gt;     泛型程序设计 意味着编写的代码可以被很多不同类型的对象所重用（比如是重载的感觉）。比如说我们并不希望聚集String和File对象分别设计不同的类。实际上可以通过ArrayList&lt;T&gt; 来聚集任何类型
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>不知为何</title>
    <link href="http://yoursite.com/2020/01/09/%E4%B8%8D%E7%9F%A5%E4%B8%BA%E4%BD%95/"/>
    <id>http://yoursite.com/2020/01/09/%E4%B8%8D%E7%9F%A5%E4%B8%BA%E4%BD%95/</id>
    <published>2020-01-09T09:58:49.335Z</published>
    <updated>2020-01-09T10:09:47.114Z</updated>
    
    <content type="html"><![CDATA[<p>该怎么做？做什么呢？</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;该怎么做？做什么呢？&lt;/p&gt;

      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2020/01/09/hello-world/"/>
    <id>http://yoursite.com/2020/01/09/hello-world/</id>
    <published>2020-01-09T08:05:00.339Z</published>
    <updated>2020-01-09T08:05:00.340Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
